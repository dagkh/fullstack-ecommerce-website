@model LuigiiLuxury.Domain.ViewModels.OrderFormViewModel

@using (Html.BeginForm("Checkout", "Cart", FormMethod.Post, new { @class = "checkouts-form" }))
{
    @Html.AntiForgeryToken()

    <!--User Id-->
    @Html.HiddenFor(m => m.UserId)

    <!--Email-->
    <div class="mb-3">
        @Html.LabelFor(model => model.Email)
        @if (Model != null)
        {
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Email", value = Model.Email })
        }
        else
        {
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Email" })
        }
    </div>

    <!--Country-->
    <div class="mb-3">
        @Html.LabelFor(model => model.Country)
        @Html.Partial("_InputSelectOptionCountry")
    </div>

    <!--Region-->
    <div class="mb-3">
        @Html.LabelFor(model => model.ShipRegion)
        @Html.TextBoxFor(model => model.ShipRegion, new { @class = "form-control", placeholder = "Ship Region" })
        @Html.ValidationMessageFor(m => m.ShipRegion)
    </div>

    <!--City-->
    <div class="mb-3">
        @Html.LabelFor(model => model.ShipCity)
        @Html.TextBoxFor(model => model.ShipCity, new { @class = "form-control", placeholder = "Ship City" })
        @Html.ValidationMessageFor(m => m.ShipCity)
    </div>

    <!--Full Name-->
    <div class="mb-3">
        @Html.LabelFor(model => model.ShipFullName)
        @if (Model != null)
        {
            @Html.TextBoxFor(model => model.ShipFullName, new { @class = "form-control", placeholder = "Full Name", value = Model.ShipFullName })
            @Html.TextBoxFor(model => model.UserId, new { type = "hidden", value = Model.UserId })
        }
        else
        {
            @Html.TextBoxFor(model => model.ShipFullName, new { @class = "form-control", placeholder = "Full Name" })
        }
        @Html.ValidationMessageFor(m => m.ShipFullName)

    </div>

    <!--Address-->
    <div class="mb-3">
        @Html.LabelFor(model => model.ShipAddress)
        @if (Model != null)
        {
            @Html.TextBoxFor(model => model.ShipAddress, new { @class = "form-control", placeholder = "Address", value = Model.ShipAddress })
        }
        else
        {
            @Html.TextBoxFor(model => model.ShipAddress, new { @class = "form-control", placeholder = "Address" })
        }
        @Html.ValidationMessageFor(m => m.ShipAddress)
    </div>

    <!--Phone number-->
    <div class="mb-3">
        @Html.LabelFor(model => model.ShipPhoneNumber)
        @if (Model != null)
        {
            @Html.TextBoxFor(model => model.ShipPhoneNumber, new { @class = "form-control", placeholder = "Phone number", value = Model.ShipPhoneNumber })
        }
        else
        {
            @Html.TextBoxFor(model => model.ShipPhoneNumber, new { @class = "form-control", placeholder = "Phone number" })
        }
        @Html.ValidationMessageFor(model => model.ShipPhoneNumber)
    </div>

    <!--Note-->
    <div class="mb-3">
        @Html.LabelFor(model => model.Note)
        @Html.TextBoxFor(model => model.Note, new { @class = "form-control", placeholder = "Note" })
        @Html.ValidationMessageFor(model => model.Note)
    </div>

    <!--return and checkout button-->
    <div class="row d-flex justify-content-between align-items-center mt-4 mb-5 mb-sm-5 mb-md-5 mb-xl-0 mb-lg-0">
        <div class="col-4 col-lg-4 col-xl-4 d-grid p-0">
            <a href="/Cart/Index" style="text-transform: uppercase; font-size: 10px;"><p class="text-uppercase"><i class="fa fa-solid fa-chevron-left"></i> Return to cart</p></a>
        </div>
        <div class="col-4 col-lg-4 col-xl-4 d-grid p-0">
            <button style="text-transform: uppercase; font-size: 10px;" class="btn btn-dark p-3" type="submit"><p class="text-white text-uppercase">check out</p></button>
        </div>
    </div>
}